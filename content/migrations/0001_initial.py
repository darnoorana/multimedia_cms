# Generated by Django 5.0.6 on 2025-09-21 15:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='الاسم')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='الرابط المختصر')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='عدد الاستخدامات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'علامة',
                'verbose_name_plural': 'العلامات',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='الرابط المختصر')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('thumbnail', models.ImageField(blank=True, upload_to='playlists/', verbose_name='الصورة المصغرة')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='عنوان Meta')),
                ('meta_description', models.TextField(blank=True, max_length=160, verbose_name='وصف Meta')),
                ('meta_keywords', models.TextField(blank=True, verbose_name='كلمات مفتاحية')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مميزة')),
                ('is_published', models.BooleanField(default=True, verbose_name='منشورة')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='السماح بالتعليقات')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='الترتيب')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category', verbose_name='التصنيف')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='أنشأ بواسطة')),
            ],
            options={
                'verbose_name': 'قائمة تشغيل',
                'verbose_name_plural': 'قوائم التشغيل',
                'ordering': ['-is_featured', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('slug', models.SlugField(blank=True, verbose_name='الرابط المختصر')),
                ('content_type', models.CharField(choices=[('youtube', 'فيديو يوتيوب'), ('soundcloud', 'صوت ساوندكلاود'), ('mixed', 'مختلط (فيديو + صوت)'), ('text', 'نص فقط')], max_length=20, verbose_name='نوع المحتوى')),
                ('youtube_url', models.URLField(blank=True, help_text='مثال: https://www.youtube.com/watch?v=VIDEO_ID', verbose_name='رابط يوتيوب')),
                ('soundcloud_url', models.URLField(blank=True, help_text='مثال: https://soundcloud.com/user/track', verbose_name='رابط ساوندكلاود')),
                ('youtube_video_id', models.CharField(blank=True, max_length=50, verbose_name='معرف فيديو يوتيوب')),
                ('soundcloud_track_id', models.CharField(blank=True, max_length=50, verbose_name='معرف مقطع ساوندكلاود')),
                ('content_text', models.TextField(blank=True, verbose_name='النص')),
                ('thumbnail', models.ImageField(blank=True, upload_to='playlist_items/', verbose_name='الصورة المصغرة')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='عنوان Meta')),
                ('meta_description', models.TextField(blank=True, max_length=160, verbose_name='وصف Meta')),
                ('is_published', models.BooleanField(default=True, verbose_name='منشور')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='السماح بالتعليقات')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='الترتيب')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('youtube_downloads', models.PositiveIntegerField(default=0, verbose_name='تحميلات يوتيوب')),
                ('soundcloud_downloads', models.PositiveIntegerField(default=0, verbose_name='تحميلات ساوندكلاود')),
                ('text_copies', models.PositiveIntegerField(default=0, verbose_name='نسخ النص')),
                ('shares_count', models.PositiveIntegerField(default=0, verbose_name='المشاركات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.playlist', verbose_name='قائمة التشغيل')),
            ],
            options={
                'verbose_name': 'عنصر قائمة التشغيل',
                'verbose_name_plural': 'عناصر قوائم التشغيل',
                'ordering': ['playlist', 'order', 'created_at'],
                'unique_together': {('playlist', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='اسم الكاتب')),
                ('author_email', models.EmailField(max_length=254, verbose_name='بريد الكاتب')),
                ('author_website', models.URLField(blank=True, verbose_name='موقع الكاتب')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('is_approved', models.BooleanField(default=False, verbose_name='معتمد')),
                ('is_spam', models.BooleanField(default=False, verbose_name='مزعج')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='عنوان IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='وكيل المستخدم')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('playlist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.playlistitem', verbose_name='العنصر')),
            ],
            options={
                'verbose_name': 'تعليق',
                'verbose_name_plural': 'التعليقات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistItemTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.playlistitem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.tag')),
            ],
            options={
                'verbose_name': 'علامة العنصر',
                'verbose_name_plural': 'علامات العناصر',
                'unique_together': {('playlist_item', 'tag')},
            },
        ),
    ]
